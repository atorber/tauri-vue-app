---
description: 
globs: 
alwaysApply: true
---
Rule Name: fe
Description: 
1. 技术栈规范
   - 基于 Vue 3 + TypeScript + Element Plus + Tauri 技术栈开发
   - 遵循 Vue 3 组合式 API (Composition API) 最佳实践
   - 使用 TypeScript 进行类型检查和代码提示
   - 使用 Element Plus 组件库保持 UI 一致性

2. 代码组织规范
   - 遵循模块化和组件化开发原则
   - 使用 Vue Router 进行路由管理
   - 组件目录结构清晰，按功能模块划分
   - 公共组件放置在 components 目录下
   - 页面组件放置在 views 目录下
   - 工具函数放置在 utils 目录下
   - 接口请求统一管理在 api 目录下

3. UI/UX 设计规范
   - 遵循 Element Plus 设计规范
   - 保持全局样式一致性，避免重复定义
   - 响应式设计，适配不同屏幕尺寸
   - 合理使用布局组件，保持页面结构清晰
   - 统一的错误处理和加载状态展示

4. 开发流程规范
   - 先分析接口文档，设计合理的数据结构
   - 根据业务需求设计组件层级和数据流转
   - 遵循 DRY 原则，提取公共逻辑和组件
   - 编写清晰的组件文档和注释
   - 代码提交前进行 TypeScript 类型检查
   - 不得改变当前页面框架结构，包括左侧边栏、顶部等

5. 性能优化规范
   - 合理使用 Vue 3 响应式 API
   - 避免不必要的组件重渲染
   - 大型组件使用异步加载
   - 合理使用缓存机制
   - 图片资源进行适当压缩

6. 跨平台适配规范
   - 使用 Tauri API 进行桌面端功能开发
   - 考虑不同操作系统的兼容性
   - 合理使用 Tauri 插件系统
   - 遵循桌面应用最佳实践 